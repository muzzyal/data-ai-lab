[tool.poetry]
name = "transaction-ingestion-service"
version = "1.0.0"
description = "A Flask-based webhook ingestion service for Google Cloud Run with Pub/Sub integration"
authors = ["Transaction Ingestion Team"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
flask = "^3.1.1"
gunicorn = "^23.0.0"
werkzeug = "^3.1.3"
jsonschema = "^4.24.0"
google-cloud-pubsub = "^2.29.1"
google-cloud-secret-manager = "2.24.0"
flask-sqlalchemy = "^3.1.1"
psycopg2-binary = "^2.9.10"
poetry = "^2.1.3"

[tool.poetry.scripts]
start = "main:main"
test = "pytest:main"
serve = "gunicorn main:app --bind 0.0.0.0:5000 --reload"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
pytest-cov = "^4.0.0"
black = "^24.0.0"
flake8 = "^7.0.0"
mypy = "^1.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    "env/*",
    "*/site-packages/*",
    "setup.py",
    "conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".env",
]
